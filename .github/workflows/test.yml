name: Test that builds work

on:
  push:

env:
  PREVIOUS_CRYSTAL_VERSION: 1.6.2
  CRYSTAL_VERSION: 1.7.0
  PACKAGE_VERSION: 1

jobs:
  test-linux-build:
    # TODO: set architecture based off matrix value when ARM runner available
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        architecture:
          - x86_64
          - aarch64
    steps:
      -
        name: Checkout the distribution scripts
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      -
        name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      -
        name: Build the linux binaries
        run: |
          cd linux
          make \
            arch=${{ matrix.architecture }} \
            CRYSTAL_VERSION=${{ env.CRYSTAL_VERSION }} \
            PACKAGE_VERSION=${{ env.PACKAGE_VERSION }} \
            PREVIOUS_CRYSTAL_VERSION=${{ env.PREVIOUS_CRYSTAL_VERSION }}

      -
        name: Upload the binaries for use in the next step
        uses: actions/upload-artifact@v3
        with:
          name: linux-${{ env.CRYSTAL_VERSION }}-{{ matrix.architecture }}-${{ env.PACKAGE_VERSION }}
          path: linux/output/*.gz


  test-docker-build:
    runs-on: ubuntu-latest
    needs: test-linux-build
    strategy:
      fail-fast: false
      matrix:
        architecture:
          - x86_64
          - aarch64
    steps:
      -
        name: Checkout the distribution scripts
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      -
        name: Download the linux binaries
        uses: actions/download-artifact@v3
        with:
          name: linux-${{ env.CRYSTAL_VERSION }}-{{ matrix.architecture }}-${{ env.PACKAGE_VERSION }}
          path: docker/build-context

      -
        name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      -
        name: Build the docker image
        run: |
          cd docker
          make \
            arch=${{ matrix.architecture }} \
            CRYSTAL_VERSION=${{ env.CRYSTAL_VERSION }} \
            PACKAGE_VERSION=${{ env.PACKAGE_VERSION }} \
            PREVIOUS_CRYSTAL_VERSION=${{ env.PREVIOUS_CRYSTAL_VERSION }}

      -
        name: Upload the docker image for use in the next step
        uses: actions/upload-artifact@v3
        with:
          name: docker-crystal-${{ env.CRYSTAL_VERSION }}-{{ matrix.architecture }}-${{ env.PACKAGE_VERSION }}
          path: docker/output/*.gz

  test-docker-containers:
    runs-on: ubuntu-latest
    needs: test-docker-build
    strategy:
      fail-fast: false
      matrix:
        architecture:
          - x86_64
          - aarch64
        distribution:
          - alpine
          - ubuntu
    steps:
      -
        name: Download the docker images
        uses: actions/download-artifact@v3
        with:
          name: docker-crystal-${{ env.CRYSTAL_VERSION }}-{{ matrix.architecture }}-${{ env.PACKAGE_VERSION }}
          path: docker/build-context

      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      -
        name: Test the docker images
        run: |
          image=crystallang/crystal:${{ env.CRYSTAL_VERSION }}${{ matrix.distribution == 'alpine' && '-alpine' }}
          docker load -i docker/output/*.tar.gz
          docker run \
            --rm \
            -it \
            $image \
            crystal --version

          docker run \
            --rm \
            -it \
            $image\
            shards --version
